[
    {
        "id": "3a7c0e06.a1a222",
        "type": "tab",
        "label": "ePO System Find Example",
        "disabled": false,
        "info": "This sample invokes and displays the results of a `system.find` remote command\r\nvia the ePO DXL service. The results of the find command are displayed on the\r\nNode-RED `debug` tab.\r\n\r\n### Prerequisites\r\n\r\n* The samples configuration step has been completed (see\r\n  [Client Configuration](https://opendxl.github.io/node-red-contrib-dxl/jsdoc/tutorial-configuration.html)).\r\n* A ePO DXL service is running and available on the DXL fabric. If version 5.0\r\n  or later of the DXL ePO extensions are installed on your ePO server, an ePO\r\n  DXL service should already be running on the fabric. If you are using an\r\n  earlier version of the DXL ePO extensions, you can use the\r\n  [ePO DXL Python Service](https://github.com/opendxl/opendxl-epo-service-python).\r\n* The DXL client associated with the `Find systems in ePO` node is\r\n  authorized to invoke the ePO DXL service, and the user that is connecting to\r\n  the ePO server (within the ePO DXL service) has permission to execute the\r\n  `system.find` remote command (see\r\n  [Client Authorization](https://opendxl.github.io/opendxl-epo-client-python/pydoc/authorization.html)).\r\n\r\n### Setup\r\n\r\n* Edit the `Set system find request parameters` node.\r\n\r\n  * Set the value for the `msg.searchText` rule to the search text to use for\r\n    the system find command. For example:\r\n\r\n    ```\r\n    broker\r\n    ```\r\n\r\n  * If more than one ePO service is available on the DXL fabric that the DXL\r\n    client is connecting to, set the value for the `msg.epoUniqueId` rule to\r\n    the ID of the ePO service through which the remote command should be\r\n    performed.\r\n \r\n    By default, the `msg.epoUniqueId` property is empty, in which case the\r\n    client attempts to dynamically determine the ID of the ePO service to\r\n    communicate with.\r\n\r\n\r\n* To deploy the flow, press the `Deploy` button in the upper-right corner of the\r\n  screen. If Node-RED is able to properly connect to the DXL fabric, a green dot\r\n  with the word `connected` should appear under the `Find systems in ePO` node.\r\n\r\n### Running\r\n\r\nTo exercise the flow, double-click the button on the left side of the\r\n`Start flow` node.\r\n\r\n### Output\r\n\r\nThe following output should appear in the Node-RED `debug` tab:\r\n\r\n```\r\n▶ [ object ]\r\n```\r\n\r\nAfter clicking on the right arrow button to expand the contents of the object,\r\noutput similar to the following should appear:\r\n\r\n```\r\n▼ array[1]\r\n ▼ 0: object\r\n    EPOComputerProperties.ParentID: 2\r\n    EPOComputerProperties.ComputerName\": \"mysystem\",\r\n    EPOComputerProperties.Description\": null,\r\n...\r\n```\r\n\r\n### Details\r\n\r\nThe flow exercises the nodes below.\r\n\r\n#### Start flow\r\n\r\nThis is an `inject` input node which starts the flow.\r\n\r\n#### Set system find request parameters\r\n\r\nThis is a `change` node which sets the search text to use for the system(s)\r\nto find as the `searchText` property on the message. This node also sets a value\r\nfor the `msg.epoUniqueId` property. If the value is not empty, it is used as the\r\nunique ID of the ePO server which the remote command is sent to.\r\n\r\n#### Find systems in ePO\r\n\r\nThis is an `epo system find` node. This node connects to the DXL fabric and\r\nsends a DXL `Request` message to the ePO service. The message specifies the\r\ntarget remote command as `system.find`.\r\n\r\nThe request message also includes the `msg.searchText` property set by the\r\n`Set system find request parameters` node.\r\n \r\nThe `Return` property is set to \"a parsed JSON object\" and the `Format` property\r\nis set to \"JSON\" to indicate that the payload for the response should be\r\nadded to the output message as a JavaScript object decoded from JSON.\r\n\r\n#### Output result\r\n\r\nThis is a `debug` output node. This node outputs the `payload` set on\r\nthe message by the `Find systems in ePO` node. The output should include\r\nthe response received from the DXL fabric for the `system.find` command."
    },
    {
        "id": "90ca5c31.613bb",
        "type": "inject",
        "z": "3a7c0e06.a1a222",
        "name": "Start flow",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 100,
        "y": 100,
        "wires": [
            [
                "82a674c.af10188"
            ]
        ]
    },
    {
        "id": "340219c6.c51936",
        "type": "debug",
        "z": "3a7c0e06.a1a222",
        "name": "Output systems",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 480,
        "y": 300,
        "wires": []
    },
    {
        "id": "f1be385f.4f4cb8",
        "type": "dxl-epo-system-find",
        "z": "3a7c0e06.a1a222",
        "name": "",
        "client": "",
        "searchNameOnly": "",
        "epoUniqueId": "",
        "returnType": "obj",
        "x": 280,
        "y": 300,
        "wires": [
            [
                "340219c6.c51936"
            ]
        ]
    },
    {
        "id": "82a674c.af10188",
        "type": "change",
        "z": "3a7c0e06.a1a222",
        "name": "Set system find request parameters",
        "rules": [
            {
                "t": "set",
                "p": "searchText",
                "pt": "msg",
                "to": "<specify-search-text>",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "searchNameOnly",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "epoUniqueId",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 200,
        "wires": [
            [
                "f1be385f.4f4cb8"
            ]
        ]
    },
    {
        "id": "2afe3130.3cefbe",
        "type": "comment",
        "z": "3a7c0e06.a1a222",
        "name": "Supply the system search text to use in the 'Set search text' node",
        "info": "",
        "x": 250,
        "y": 40,
        "wires": []
    }
]
